{"version":3,"sources":["components/LinkButton/LinkButton.jsx","components/MainPage/MainPage.jsx","components/PageNotFound/PageNotFound.jsx","context/context.jsx","containers/AltsPage/AltsPage.jsx","containers/BnbPage/BnbPage.jsx","containers/BtcPage/BtcPage.jsx","containers/TestWSpage/TestWSpage.jsx","containers/UsdPage/UsdPage.jsx","containers/App/App.jsx","constants.js","reducers/coinsReducer.jsx","context/coinsContext/CoinsContextStore.jsx","serviceWorker.js","index.js"],"names":["StyledLinkButton","styled","button","LinkButton","props","to","label","click","onClick","defaultProps","MainPage","Fragment","PageNotFound","CoinsContext","React","createContext","TextField","input","ClearButton","AltsPage","useContext","store","fetchData","console","log","hasData","coins","useState","filterText","setFilterText","data","filter","item","pm","map","value","default","pairs","b","q","latestPrice","c","toFixed","change","o","filteredItems","toLowerCase","includes","useEffect","FilterComponent","onFilter","onClear","id","type","placeholder","aria-label","onChange","subHeaderComponentMemo","useMemo","e","target","title","columns","name","selector","sortable","style","color","backgroundColor","conditionalCellStyles","when","row","subHeader","subHeaderComponent","persistTableHead","BnbPage","BtcPage","Container","div","FlexContainer","ws","WebSocket","TestWSpage","setData","dataForUse","values","onmessage","evt","msgs","JSON","parse","onopen","key","E","s","v","UsdPage","HeaderContainer","ButtonsContainer","Content","App","exact","path","component","COINS_API","initialState","isLoading","coinsReducer","state","action","payload","CoinsStore","children","useReducer","dispatch","a","fetch","response","json","setTimeout","error","getCoinsFromApi","Axios","get","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.eff2a6b2.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLinkButton = styled.button`\n  color: black;\n  font-size: 26px;\n  height: 100%;\n  padding: 0 40px;\n  cursor: pointer;\n`;\n\nconst LinkButton = (props) => {\n  const { to, label, click } = props;\n  return (\n    <Link to={to}>\n      <StyledLinkButton onClick={click}>\n        <span>{label}</span>\n      </StyledLinkButton>\n    </Link>\n  );\n};\n\nLinkButton.defaultProps = {\n  click: null,\n};\n\nLinkButton.propTypes = {\n  to: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  click: PropTypes.func,\n};\n\nexport default LinkButton;\n","import React from \"react\";\n\nconst MainPage = () => (\n  <React.Fragment>\n    <h1>MAIN PAGE</h1>\n  </React.Fragment>\n);\n\nexport default MainPage;\n","import React from 'react';\n\nconst PageNotFound = () => (\n  <React.Fragment>\n    <h1>404 PAGE NOT FOUND</h1>\n  </React.Fragment>\n);\n\nexport default PageNotFound;\n","import React from \"react\";\n\nexport const CoinsContext = React.createContext({});\n\nexport const SomeContext = React.createContext({});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport { CoinsContext } from \"../../context/context\";\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AltsPage = () => {\n  const { store, fetchData } = useContext(CoinsContext);\n  console.log(\"store hasData\", store.hasData);\n  console.log(\"coins\", store.coins);\n\n  const [filterText, setFilterText] = useState(\"\");\n\n  const data =\n    store.hasData === true &&\n    store.coins\n      .filter((item) => item.pm === \"ALTS\")\n      .map((value) => ({\n        default: value,\n        pairs: `${value.b}/${value.q}`,\n        latestPrice: value.c.toFixed(8),\n        change: ((value.c / value.o - 1) * 100).toFixed(2),\n      }));\n\n  console.log(\"data\", data);\n\n  const filteredItems =\n    store.hasData === true &&\n    data.filter((item) =>\n      item.pairs.toLowerCase().includes(filterText.toLowerCase())\n    );\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n      <TextField\n        id=\"search\"\n        type=\"text\"\n        placeholder=\"Filter By Name\"\n        aria-label=\"Search Input\"\n        value={filterText}\n        onChange={onFilter}\n      />\n      <ClearButton type=\"button\" onClick={onClear}>\n        X\n      </ClearButton>\n    </>\n  );\n\n  const columns = [\n    {\n      name: \"Pair\",\n      selector: \"pairs\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Last price\",\n      selector: \"latestPrice\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Change\",\n      selector: \"change\",\n      sortable: true,\n      conditionalCellStyles: [\n        {\n          when: (row) => row.change < 0,\n          style: {\n            color: \"rgb(248, 73, 96)\",\n            backgroundColor: \"black\",\n          },\n        },\n        {\n          when: (row) => row.change >= 0,\n          style: {\n            color: \"rgb(2, 192, 118)\",\n            backgroundColor: \"black\",\n          },\n        },\n      ],\n    },\n  ];\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText]);\n\n  return (\n    store.hasData === true && (\n      <DataTable\n        title=\"ALTS\"\n        columns={columns}\n        data={filteredItems}\n        subHeader\n        subHeaderComponent={subHeaderComponentMemo}\n        persistTableHead\n      />\n    )\n  );\n\n  // return (\n  //   <div>\n  //     <Title>BTC</Title>\n  //     {store.hasData === true &&\n  //       store.coins.map(\n  //         (d) =>\n  //           d.pm === \"BTC\" && (\n  //             <Container key={d.an + d.as}>\n  //               <p>\n  //                 {d.b}/{d.q} latest price {d.c.toFixed(8)} change\n  //               </p>\n  //               {(d.c / d.o - 1) * 100 >= 0 ? (\n  //                 <HigherThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </HigherThanStart>\n  //               ) : (\n  //                 <LowerThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </LowerThanStart>\n  //               )}\n  //             </Container>\n  //           )\n  //       )}\n  //   </div>\n  // );\n};\n\nexport default AltsPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport { CoinsContext } from \"../../context/context\";\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BnbPage = () => {\n  const { store, fetchData } = useContext(CoinsContext);\n  console.log(\"store hasData\", store.hasData);\n  console.log(\"coins\", store.coins);\n\n  const [filterText, setFilterText] = useState(\"\");\n\n  const data =\n    store.hasData === true &&\n    store.coins\n      .filter((item) => item.pm === \"BNB\")\n      .map((value) => ({\n        ...value,\n        pairs: `${value.b}/${value.q}`,\n        latestPrice: value.c.toFixed(8),\n        change: ((value.c / value.o - 1) * 100).toFixed(2),\n      }));\n\n  console.log(\"data\", data);\n\n  const filteredItems =\n    store.hasData === true &&\n    data.filter((item) =>\n      item.pairs.toLowerCase().includes(filterText.toLowerCase())\n    );\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n      <TextField\n        id=\"search\"\n        type=\"text\"\n        placeholder=\"Filter By Name\"\n        aria-label=\"Search Input\"\n        value={filterText}\n        onChange={onFilter}\n      />\n      <ClearButton type=\"button\" onClick={onClear}>\n        X\n      </ClearButton>\n    </>\n  );\n\n  const columns = [\n    {\n      name: \"Pair\",\n      selector: \"pairs\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Last price\",\n      selector: \"latestPrice\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Change\",\n      selector: \"change\",\n      sortable: true,\n      conditionalCellStyles: [\n        {\n          when: (row) => row.change < 0,\n          style: {\n            color: \"rgb(248, 73, 96)\",\n            backgroundColor: \"black\",\n          },\n        },\n        {\n          when: (row) => row.change >= 0,\n          style: {\n            color: \"rgb(2, 192, 118)\",\n            backgroundColor: \"black\",\n          },\n        },\n      ],\n    },\n  ];\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText]);\n\n  return (\n    store.hasData === true && (\n      <DataTable\n        title=\"BNB\"\n        columns={columns}\n        data={filteredItems}\n        subHeader\n        subHeaderComponent={subHeaderComponentMemo}\n        persistTableHead\n      />\n    )\n  );\n\n  // return (\n  //   <div>\n  //     <Title>BTC</Title>\n  //     {store.hasData === true &&\n  //       store.coins.map(\n  //         (d) =>\n  //           d.pm === \"BTC\" && (\n  //             <Container key={d.an + d.as}>\n  //               <p>\n  //                 {d.b}/{d.q} latest price {d.c.toFixed(8)} change\n  //               </p>\n  //               {(d.c / d.o - 1) * 100 >= 0 ? (\n  //                 <HigherThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </HigherThanStart>\n  //               ) : (\n  //                 <LowerThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </LowerThanStart>\n  //               )}\n  //             </Container>\n  //           )\n  //       )}\n  //   </div>\n  // );\n};\n\nexport default BnbPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport { CoinsContext } from \"../../context/context\";\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BtcPage = () => {\n  const { store, fetchData } = useContext(CoinsContext);\n  console.log(\"store hasData\", store.hasData);\n  console.log(\"coins\", store.coins);\n\n  const [filterText, setFilterText] = useState(\"\");\n\n  const data =\n    store.hasData === true &&\n    store.coins\n      .filter((item) => item.pm === \"BTC\")\n      .map((value) => ({\n        ...value,\n        pairs: `${value.b}/${value.q}`,\n        latestPrice: value.c.toFixed(8),\n        change: ((value.c / value.o - 1) * 100).toFixed(2),\n      }));\n\n  console.log(\"data\", data);\n\n  const filteredItems =\n    store.hasData === true &&\n    data.filter((item) =>\n      item.pairs.toLowerCase().includes(filterText.toLowerCase())\n    );\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n      <TextField\n        id=\"search\"\n        type=\"text\"\n        placeholder=\"Filter By Name\"\n        aria-label=\"Search Input\"\n        value={filterText}\n        onChange={onFilter}\n      />\n      <ClearButton type=\"button\" onClick={onClear}>\n        X\n      </ClearButton>\n    </>\n  );\n\n  const columns = [\n    {\n      name: \"Pair\",\n      selector: \"pairs\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Last price\",\n      selector: \"latestPrice\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Change\",\n      selector: \"change\",\n      sortable: true,\n      conditionalCellStyles: [\n        {\n          when: (row) => row.change < 0,\n          style: {\n            color: \"rgb(248, 73, 96)\",\n            backgroundColor: \"black\",\n          },\n        },\n        {\n          when: (row) => row.change >= 0,\n          style: {\n            color: \"rgb(2, 192, 118)\",\n            backgroundColor: \"black\",\n          },\n        },\n      ],\n    },\n  ];\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText]);\n\n  return (\n    store.hasData === true && (\n      <DataTable\n        title=\"BTC\"\n        columns={columns}\n        data={filteredItems}\n        subHeader\n        subHeaderComponent={subHeaderComponentMemo}\n        persistTableHead\n      />\n    )\n  );\n\n  // return (\n  //   <div>\n  //     <Title>BTC</Title>\n  //     {store.hasData === true &&\n  //       store.coins.map(\n  //         (d) =>\n  //           d.pm === \"BTC\" && (\n  //             <Container key={d.an + d.as}>\n  //               <p>\n  //                 {d.b}/{d.q} latest price {d.c.toFixed(8)} change\n  //               </p>\n  //               {(d.c / d.o - 1) * 100 >= 0 ? (\n  //                 <HigherThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </HigherThanStart>\n  //               ) : (\n  //                 <LowerThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </LowerThanStart>\n  //               )}\n  //             </Container>\n  //           )\n  //       )}\n  //   </div>\n  // );\n};\n\nexport default BtcPage;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: black;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n`;\n\nlet ws = new WebSocket(\n  \"wss://stream.binance.com/stream?streams=!miniTicker@arr\"\n);\n\nconst TestWSpage = () => {\n  const [data, setData] = useState([]);\n\n  const dataForUse = data.map((values) => ({\n    ...values,\n  }));\n\n  console.log(\"dataForUse\", dataForUse);\n\n  ws.onmessage = (evt) => {\n    try {\n      let msgs = JSON.parse(evt.data);\n      setData(msgs.data);\n    } catch (e) {\n      console.log(\"Err message: \" + evt.data, e);\n    }\n  };\n\n  useEffect(() => {\n    ws.onopen = () => {\n      console.log(\"Wss connected...\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Container>\n        {dataForUse.map((item) => (\n          <FlexContainer>\n            <p key={item.E}>\n              {item.s} {item.v}\n            </p>\n          </FlexContainer>\n        ))}\n      </Container>\n    </div>\n  );\n};\n\nexport default TestWSpage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport { CoinsContext } from \"../../context/context\";\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst UsdPage = () => {\n  const { store, fetchData } = useContext(CoinsContext);\n  console.log(\"store hasData\", store.hasData);\n  console.log(\"coins\", store.coins);\n\n  const [filterText, setFilterText] = useState(\"\");\n\n  const data =\n    store.hasData === true &&\n    store.coins\n      .filter((item) => item.pm === \"USDⓈ\")\n      .map((value) => ({\n        default: value,\n        pairs: `${value.b}/${value.q}`,\n        latestPrice: value.c.toFixed(8),\n        change: ((value.c / value.o - 1) * 100).toFixed(2),\n      }));\n\n  console.log(\"data\", data);\n\n  const filteredItems =\n    store.hasData === true &&\n    data.filter((item) =>\n      item.pairs.toLowerCase().includes(filterText.toLowerCase())\n    );\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n      <TextField\n        id=\"search\"\n        type=\"text\"\n        placeholder=\"Filter By Name\"\n        aria-label=\"Search Input\"\n        value={filterText}\n        onChange={onFilter}\n      />\n      <ClearButton type=\"button\" onClick={onClear}>\n        X\n      </ClearButton>\n    </>\n  );\n\n  const columns = [\n    {\n      name: \"Pair\",\n      selector: \"pairs\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Last price\",\n      selector: \"latestPrice\",\n      sortable: true,\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n      },\n    },\n    {\n      name: \"Change\",\n      selector: \"change\",\n      sortable: true,\n      conditionalCellStyles: [\n        {\n          when: (row) => row.change < 0,\n          style: {\n            color: \"rgb(248, 73, 96)\",\n            backgroundColor: \"black\",\n          },\n        },\n        {\n          when: (row) => row.change >= 0,\n          style: {\n            color: \"rgb(2, 192, 118)\",\n            backgroundColor: \"black\",\n          },\n        },\n      ],\n    },\n  ];\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText]);\n\n  return (\n    store.hasData === true && (\n      <DataTable\n        title=\"USD\"\n        columns={columns}\n        data={filteredItems}\n        subHeader\n        subHeaderComponent={subHeaderComponentMemo}\n        persistTableHead\n      />\n    )\n  );\n\n  // return (\n  //   <div>\n  //     <Title>BTC</Title>\n  //     {store.hasData === true &&\n  //       store.coins.map(\n  //         (d) =>\n  //           d.pm === \"BTC\" && (\n  //             <Container key={d.an + d.as}>\n  //               <p>\n  //                 {d.b}/{d.q} latest price {d.c.toFixed(8)} change\n  //               </p>\n  //               {(d.c / d.o - 1) * 100 >= 0 ? (\n  //                 <HigherThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </HigherThanStart>\n  //               ) : (\n  //                 <LowerThanStart>\n  //                   {((d.c / d.o - 1) * 100).toFixed(2)}{\" \"}\n  //                   {(d.c / d.o - 1) * 100 > 0}\n  //                 </LowerThanStart>\n  //               )}\n  //             </Container>\n  //           )\n  //       )}\n  //   </div>\n  // );\n};\n\nexport default UsdPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport LinkButton from \"../../components/LinkButton/LinkButton\";\nimport MainPage from \"../../components/MainPage/MainPage\";\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\nimport AltsPage from \"../AltsPage/AltsPage\";\nimport BnbPage from \"../BnbPage/BnbPage\";\nimport BtcPage from \"../BtcPage/BtcPage\";\nimport TestWSpage from \"../TestWSpage/TestWSpage\";\nimport UsdPage from \"../UsdPage/UsdPage\";\n\nconst HeaderContainer = styled.div`\n  height: 60px;\n  display: flex;\n  background-color: #f5f5f5;\n`;\n\nconst ButtonsContainer = styled.div`\n  height: 100%;\n  display: flex;\n`;\n\nconst Content = styled.div``;\n\nfunction App() {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <HeaderContainer>\n          <header>\n            <ButtonsContainer>\n              <LinkButton to=\"/btc\" label=\"BTC\" />\n              <LinkButton to=\"/bnb\" label=\"BNB\" />\n              <LinkButton to=\"/alts\" label=\"ALTS\" />\n              <LinkButton to=\"/usd\" label=\"USD\" />\n              <LinkButton to=\"/testws\" label=\"WS\" />\n            </ButtonsContainer>\n          </header>\n        </HeaderContainer>\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route path=\"/btc\" component={BtcPage} />\n            <Route path=\"/bnb\" component={BnbPage} />\n            <Route path=\"/alts\" component={AltsPage} />\n            <Route path=\"/usd\" component={UsdPage} />\n            <Route path=\"/testws\" component={TestWSpage} />\n            <Route path=\"*\" component={PageNotFound} />\n          </Switch>\n        </Content>\n      </React.Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","export const COINS_API =\n  \"https://www.binance.com/exchange-api/v1/public/asset-service/product/get-products\";\n\nexport const COINS_REQUEST = \"COINS_REQUEST\";\nexport const COINS_RECEIVE = \"COINS_RECEIVE\";\n","import { COINS_RECEIVE, COINS_REQUEST } from \"../constants\";\n\nconst initialState = {\n  coins: [],\n  isLoading: false,\n  hasData: false,\n};\n\nexport default function coinsReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case COINS_REQUEST: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case COINS_RECEIVE: {\n      return {\n        ...state,\n        coins: payload,\n        isLoading: false,\n        hasData: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","/* eslint-disable no-console */\nimport Axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport React, { useReducer } from \"react\";\nimport { COINS_API, COINS_RECEIVE, COINS_REQUEST } from \"../../constants\";\nimport coinsReducer from \"../../reducers/coinsReducer\";\nimport { CoinsContext } from \"../context\";\n\nconst CoinsStore = (props) => {\n  const { children } = props;\n  const [store, dispatch] = useReducer(coinsReducer, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(COINS_API);\n      const data = await response.json();\n      dispatch({\n        type: COINS_REQUEST,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: COINS_RECEIVE,\n          payload: data.data,\n        });\n      }, 0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const getCoinsFromApi = async () => {\n    try {\n      const coins = await Axios.get(COINS_API);\n      console.log(\"coins\", coins);\n      dispatch({\n        type: COINS_RECEIVE,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: COINS_REQUEST,\n          payload: coins,\n        });\n      }, 0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <CoinsContext.Provider\n      value={{\n        store,\n        fetchData,\n        getCoinsFromApi,\n      }}\n    >\n      {children}\n    </CoinsContext.Provider>\n  );\n};\n\nCoinsStore.propTypes = {\n  children: PropTypes.shape({\n    type: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default CoinsStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport CoinsStore from \"./context/coinsContext/CoinsContextStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CoinsStore>\n      <App />\n    </CoinsStore>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}